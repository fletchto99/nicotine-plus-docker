name: Check Release

on:
  schedule:
    - cron: "0 0 * * *"  # Run daily
  workflow_dispatch:

env:
  GITHUB_API_URL: "https://api.github.com/repos/nicotine-plus/nicotine-plus/releases/latest"

permissions:
  actions: write
  contents: write
  packages: write

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      IS_NEW_RELEASE: ${{ steps.check-release.outputs.IS_NEW_RELEASE }}
      RELEASE_TAG: ${{ steps.check-release.outputs.RELEASE_TAG }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for Latest Upstream Release
        id: check-release
        run: |
          echo "Fetching latest release from upstream..."

          RESPONSE="$(curl -s "${{ env.GITHUB_API_URL }}")"
          if [ -z "$RESPONSE" ]; then
            echo "::error::Empty response from GitHub API"
            exit 1
          fi

          RELEASE_TAG=$(jq -r '.tag_name // empty' <<< "$RESPONSE")
          if [ -z "$RELEASE_TAG" ]; then
            echo "::error::Failed to extract tag_name from API response."
            exit 1
          fi

          PREV_RELEASE=$(cat .github/.current-release 2>/dev/null || echo "")
          echo "release_tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"
          echo "Previous Release: $PREV_RELEASE"
          echo "Current Release: $RELEASE_TAG"

          if [ "$RELEASE_TAG" != "$PREV_RELEASE" ]; then
            echo "New release detected."
            echo "$RELEASE_TAG" > .github/.current-release
            echo "IS_NEW_RELEASE=true" >> "$GITHUB_OUTPUT"

            # Commit updated release tag
            git config --global user.name "GitHub Action"
            git config --global user.email "action@github.com"

            git add .github/.current-release

            if git diff --cached --quiet; then
              echo "No changes to commit."
            else
              git commit -m "update version to $RELEASE_TAG"
              git push
            fi
          else
            echo "No new release detected."
            echo "IS_NEW_RELEASE=false" >> "$GITHUB_OUTPUT"
          fi

  create-release:
    name: Trigger Publish Workflow
    needs: check-release
    if: needs.check-release.outputs.IS_NEW_RELEASE == 'true'
    uses: ./.github/workflows/publish_release.yml
